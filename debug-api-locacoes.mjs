async function debugAPILocacoes() {
  console.log('üîç Debugando API de loca√ß√µes...\n');

  try {
    const response = await fetch('http://localhost:5174/api/locacoes');
    
    if (!response.ok) {
      console.error('‚ùå Erro na API:', response.status, response.statusText);
      return;
    }

    const data = await response.json();
    console.log('‚úÖ API respondeu com sucesso');
    console.log('üìä Tipo de dados retornados:', typeof data);
    console.log('üìä √â array?', Array.isArray(data));
    
    if (Array.isArray(data)) {
      console.log(`üìä Total de loca√ß√µes: ${data.length}`);
      
      // Verificar as primeiras loca√ß√µes
      data.slice(0, 3).forEach((locacao, index) => {
        console.log(`\n${index + 1}. Loca√ß√£o #${locacao.id}:`);
        console.log(`   Cliente: ${locacao.cliente?.nome || 'N/A'}`);
        console.log(`   Ve√≠culo: ${locacao.veiculo?.modelo || 'N/A'}`);
        console.log(`   Valor Seguro: R$ ${locacao.valor_seguro || 0}`);
        console.log(`   Tipo valor_seguro: ${typeof locacao.valor_seguro}`);
        console.log(`   Status: ${locacao.status}`);
      });

      // Procurar especificamente a loca√ß√£o #31
      const locacao31 = data.find(l => l.id === 31);
      if (locacao31) {
        console.log('\nüéØ Loca√ß√£o #31 (a que estamos testando):');
        console.log(JSON.stringify(locacao31, null, 2));
      } else {
        console.log('\n‚ùå Loca√ß√£o #31 n√£o encontrada na API');
      }

    } else {
      console.log('‚ùå API n√£o retornou um array');
      console.log('Dados retornados:', data);
    }

  } catch (error) {
    console.error('‚ùå Erro ao acessar API:', error.message);
  }
}

debugAPILocacoes();